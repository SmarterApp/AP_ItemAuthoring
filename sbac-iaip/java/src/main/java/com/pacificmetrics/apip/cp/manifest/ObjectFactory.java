//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.01.06 at 01:14:11 PM MST 
//


package com.pacificmetrics.apip.cp.manifest;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.pacificmetrics.apip.cp.manifest package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.pacificmetrics.apip.cp.manifest
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link RequirementType }
     * 
     */
    public RequirementType createRequirementType() {
        return new RequirementType();
    }

    /**
     * Create an instance of {@link CcssType }
     * 
     */
    public CcssType createCcssType() {
        return new CcssType();
    }

    /**
     * Create an instance of {@link ContributeType }
     * 
     */
    public ContributeType createContributeType() {
        return new ContributeType();
    }

    /**
     * Create an instance of {@link AdaptationStatementType }
     * 
     */
    public AdaptationStatementType createAdaptationStatementType() {
        return new AdaptationStatementType();
    }

    /**
     * Create an instance of {@link TaxonType }
     * 
     */
    public TaxonType createTaxonType() {
        return new TaxonType();
    }

    /**
     * Create an instance of {@link StringType }
     * 
     */
    public StringType createStringType() {
        return new StringType();
    }

    /**
     * Create an instance of {@link AccessibilityType }
     * 
     */
    public AccessibilityType createAccessibilityType() {
        return new AccessibilityType();
    }

    /**
     * Create an instance of {@link LifeCycleType }
     * 
     */
    public LifeCycleType createLifeCycleType() {
        return new LifeCycleType();
    }

    /**
     * Create an instance of {@link FormatType }
     * 
     */
    public FormatType createFormatType() {
        return new FormatType();
    }

    /**
     * Create an instance of {@link LabelType }
     * 
     */
    public LabelType createLabelType() {
        return new LabelType();
    }

    /**
     * Create an instance of {@link IntendedEndUserRoleType }
     * 
     */
    public IntendedEndUserRoleType createIntendedEndUserRoleType() {
        return new IntendedEndUserRoleType();
    }

    /**
     * Create an instance of {@link RelationType }
     * 
     */
    public RelationType createRelationType() {
        return new RelationType();
    }

    /**
     * Create an instance of {@link TypicalAgeRangeType }
     * 
     */
    public TypicalAgeRangeType createTypicalAgeRangeType() {
        return new TypicalAgeRangeType();
    }

    /**
     * Create an instance of {@link DependencyType }
     * 
     */
    public DependencyType createDependencyType() {
        return new DependencyType();
    }

    /**
     * Create an instance of {@link CostType }
     * 
     */
    public CostType createCostType() {
        return new CostType();
    }

    /**
     * Create an instance of {@link TitleType }
     * 
     */
    public TitleType createTitleType() {
        return new TitleType();
    }

    /**
     * Create an instance of {@link SizeType }
     * 
     */
    public SizeType createSizeType() {
        return new SizeType();
    }

    /**
     * Create an instance of {@link VariantType }
     * 
     */
    public VariantType createVariantType() {
        return new VariantType();
    }

    /**
     * Create an instance of {@link LomResourceType }
     * 
     */
    public LomResourceType createLomResourceType() {
        return new LomResourceType();
    }

    /**
     * Create an instance of {@link MetaType }
     * 
     */
    public MetaType createMetaType() {
        return new MetaType();
    }

    /**
     * Create an instance of {@link ContextType }
     * 
     */
    public ContextType createContextType() {
        return new ContextType();
    }

    /**
     * Create an instance of {@link ClassificationType }
     * 
     */
    public ClassificationType createClassificationType() {
        return new ClassificationType();
    }

    /**
     * Create an instance of {@link DurationType }
     * 
     */
    public DurationType createDurationType() {
        return new DurationType();
    }

    /**
     * Create an instance of {@link StructureType }
     * 
     */
    public StructureType createStructureType() {
        return new StructureType();
    }

    /**
     * Create an instance of {@link InteractivityLevelType }
     * 
     */
    public InteractivityLevelType createInteractivityLevelType() {
        return new InteractivityLevelType();
    }

    /**
     * Create an instance of {@link TechnicalType }
     * 
     */
    public TechnicalType createTechnicalType() {
        return new TechnicalType();
    }

    /**
     * Create an instance of {@link InteractivityTypeType }
     * 
     */
    public InteractivityTypeType createInteractivityTypeType() {
        return new InteractivityTypeType();
    }

    /**
     * Create an instance of {@link QtiMetadataType }
     * 
     */
    public QtiMetadataType createQtiMetadataType() {
        return new QtiMetadataType();
    }

    /**
     * Create an instance of {@link CoverageType }
     * 
     */
    public CoverageType createCoverageType() {
        return new CoverageType();
    }

    /**
     * Create an instance of {@link AggregationLevelType }
     * 
     */
    public AggregationLevelType createAggregationLevelType() {
        return new AggregationLevelType();
    }

    /**
     * Create an instance of {@link VersionType }
     * 
     */
    public VersionType createVersionType() {
        return new VersionType();
    }

    /**
     * Create an instance of {@link TypicalLearningTimeType }
     * 
     */
    public TypicalLearningTimeType createTypicalLearningTimeType() {
        return new TypicalLearningTimeType();
    }

    /**
     * Create an instance of {@link OtherPlatformRequirementsType }
     * 
     */
    public OtherPlatformRequirementsType createOtherPlatformRequirementsType() {
        return new OtherPlatformRequirementsType();
    }

    /**
     * Create an instance of {@link GeneralType }
     * 
     */
    public GeneralType createGeneralType() {
        return new GeneralType();
    }

    /**
     * Create an instance of {@link MetadataschemaType }
     * 
     */
    public MetadataschemaType createMetadataschemaType() {
        return new MetadataschemaType();
    }

    /**
     * Create an instance of {@link ResourceType }
     * 
     */
    public ResourceType createResourceType() {
        return new ResourceType();
    }

    /**
     * Create an instance of {@link ResourceMetaType }
     * 
     */
    public ResourceMetaType createResourceMetaType() {
        return new ResourceMetaType();
    }

    /**
     * Create an instance of {@link KeywordType }
     * 
     */
    public KeywordType createKeywordType() {
        return new KeywordType();
    }

    /**
     * Create an instance of {@link OtherType }
     * 
     */
    public OtherType createOtherType() {
        return new OtherType();
    }

    /**
     * Create an instance of {@link IsAdaptationType }
     * 
     */
    public IsAdaptationType createIsAdaptationType() {
        return new IsAdaptationType();
    }

    /**
     * Create an instance of {@link Manifest }
     * 
     */
    public Manifest createManifest() {
        return new Manifest();
    }

    /**
     * Create an instance of {@link FileType }
     * 
     */
    public FileType createFileType() {
        return new FileType();
    }

    /**
     * Create an instance of {@link SemanticDensityType }
     * 
     */
    public SemanticDensityType createSemanticDensityType() {
        return new SemanticDensityType();
    }

    /**
     * Create an instance of {@link LomManifestType }
     * 
     */
    public LomManifestType createLomManifestType() {
        return new LomManifestType();
    }

    /**
     * Create an instance of {@link AccessModeStatementType }
     * 
     */
    public AccessModeStatementType createAccessModeStatementType() {
        return new AccessModeStatementType();
    }

    /**
     * Create an instance of {@link PurposeType }
     * 
     */
    public PurposeType createPurposeType() {
        return new PurposeType();
    }

    /**
     * Create an instance of {@link DateType }
     * 
     */
    public DateType createDateType() {
        return new DateType();
    }

    /**
     * Create an instance of {@link KindType }
     * 
     */
    public KindType createKindType() {
        return new KindType();
    }

    /**
     * Create an instance of {@link AnnotationType }
     * 
     */
    public AnnotationType createAnnotationType() {
        return new AnnotationType();
    }

    /**
     * Create an instance of {@link InstallationRemarksType }
     * 
     */
    public InstallationRemarksType createInstallationRemarksType() {
        return new InstallationRemarksType();
    }

    /**
     * Create an instance of {@link LocationType }
     * 
     */
    public LocationType createLocationType() {
        return new LocationType();
    }

    /**
     * Create an instance of {@link GuidType }
     * 
     */
    public GuidType createGuidType() {
        return new GuidType();
    }

    /**
     * Create an instance of {@link LanguageType }
     * 
     */
    public LanguageType createLanguageType() {
        return new LanguageType();
    }

    /**
     * Create an instance of {@link RightsType }
     * 
     */
    public RightsType createRightsType() {
        return new RightsType();
    }

    /**
     * Create an instance of {@link MetaMetadataType }
     * 
     */
    public MetaMetadataType createMetaMetadataType() {
        return new MetaMetadataType();
    }

    /**
     * Create an instance of {@link DifficultyType }
     * 
     */
    public DifficultyType createDifficultyType() {
        return new DifficultyType();
    }

    /**
     * Create an instance of {@link StatusType }
     * 
     */
    public StatusType createStatusType() {
        return new StatusType();
    }

    /**
     * Create an instance of {@link IdentifierType }
     * 
     */
    public IdentifierType createIdentifierType() {
        return new IdentifierType();
    }

    /**
     * Create an instance of {@link LearningResourceTypeType }
     * 
     */
    public LearningResourceTypeType createLearningResourceTypeType() {
        return new LearningResourceTypeType();
    }

    /**
     * Create an instance of {@link CopyrightAndOtherRestrictionsType }
     * 
     */
    public CopyrightAndOtherRestrictionsType createCopyrightAndOtherRestrictionsType() {
        return new CopyrightAndOtherRestrictionsType();
    }

    /**
     * Create an instance of {@link DescriptionType }
     * 
     */
    public DescriptionType createDescriptionType() {
        return new DescriptionType();
    }

    /**
     * Create an instance of {@link TaxonPathType }
     * 
     */
    public TaxonPathType createTaxonPathType() {
        return new TaxonPathType();
    }

    /**
     * Create an instance of {@link EntityType }
     * 
     */
    public EntityType createEntityType() {
        return new EntityType();
    }

    /**
     * Create an instance of {@link EducationalType }
     * 
     */
    public EducationalType createEducationalType() {
        return new EducationalType();
    }

}
